package main

import (
	"bytes"

	"github.com/l0nax/go-spew/spew"
)

type myType struct {
	Str        string
	Number     int
	NNumber    float32
	Map        map[string]interface{}
	NestedType *myType
	Bytes      []byte
	Ref        interface{}
}

func main() {
	master := myType{
		Str:     "Super cool String",
		Number:  432534,
		NNumber: 453.3453,
		Map:     make(map[string]interface{}),
		NestedType: &myType{
			Str:    "Second super cool string",
			Number: 12312,
			Ref:    nil,
			Bytes:  bytes.Repeat([]byte("Hello World " + string([]byte{0x00})), 5),
		},
		Bytes: []byte{
			0x7f, 0x45, 0x4c, 0x46, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x3e, 0x00, 0x01, 0x00, 0x00, 0x00,
			0xa0, 0xf2, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x38, 0x00, 0x0a, 0x00, 0x40, 0x00,
			0x24, 0x00, 0x09, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
			0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x30, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe4, 0x0f, 0x00, 0x00,
			0x04, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x80, 0x0f, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x40, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
			0xe2, 0x95, 0xad, 0xe2, 0x94, 0x80, 0x20, 0x72, 0x6f, 0x6f, 0x74, 0x40,
			0x70, 0x32, 0x30, 0x30, 0x33, 0x30, 0x30, 0x65, 0x65, 0x65, 0x66, 0x20,
			0xee, 0x83, 0x88, 0x20, 0xef, 0x81, 0xbc, 0x20, 0x7e, 0x2f, 0x2e, 0x67,
			0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
			0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x30, 0x6e, 0x61, 0x78, 0x2f, 0x67,
			0x6f, 0x2d, 0x73, 0x70, 0x65, 0x77, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x20,
			0xee, 0x83, 0x88, 0x20, 0xe2, 0x9c, 0x94, 0x20, 0xee, 0x83, 0x88, 0x20,
			0xef, 0x84, 0x93, 0x20, 0x20, 0xef, 0x84, 0xa6, 0x20, 0x6d, 0x61, 0x73,
			0x74, 0x65, 0x72, 0x20, 0x21, 0x32, 0x20, 0xee, 0x82, 0xb0,
		},
		Ref: bytes.NewBuffer([]byte("test")),
	}

	master.Map["Hello"] = "World"
	master.Map["Foo"] = 15
	master.Map["MyFloat"] = 345345.345
	master.Map["False?"] = false
	master.Map["True?"] = true

	spew.Dump(master)
}
